{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/inspiredideas/afya-bora/src/views/Login.tsx\";\nimport { Box, HStack, Pressable, Stack, Text, View, VStack } from \"native-base\";\nimport * as React from \"react\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { colors } from \"../contants/colors\";\nimport { CheckBox } from \"../components/bars\";\nimport { PrimaryButton } from \"../components/button\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { NavKey as PlainAppNavKey } from \"./_Plain\";\nimport { useAuthStore } from \"../internals/auth/context\";\nimport AltContainer from \"../components/containers/AltContainer\";\nimport { ControllerFormInput } from \"../components/forms/inputs\";\nimport { useMutation } from \"react-query\";\nvar schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().nullable().required()\n});\nexport default function Login() {\n  var _React$useState = React.useState(\"eye-off-outline\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visibility = _React$useState2[0],\n      setVisibility = _React$useState2[1];\n\n  var navigation = useNavigation();\n  var login = useAuthStore(function (state) {\n    return state.signInWithEmailAndPassword;\n  });\n\n  var _Dimensions$get = Dimensions.get(\"screen\"),\n      height = _Dimensions$get.height;\n\n  var _useForm = useForm({}),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var onLogin = function onLogin() {\n    console.log(\"Logging in \");\n    loginInWithEmailAndPassword();\n  };\n\n  var _useMutation = useMutation(function () {\n    return login(\"demoemil@gmail.com\", \"password\");\n  }, {\n    onMutate: function onMutate(variables) {},\n    onError: function onError(error, variables, context) {\n      console.log(\"Something went wrong\");\n    },\n    onSuccess: function onSuccess(data, variables, context) {\n      console.log(\"User logged in successfully \");\n    }\n  }),\n      loginInWithEmailAndPassword = _useMutation.mutate,\n      isLoading = _useMutation.isLoading;\n\n  return React.createElement(AltContainer, {\n    backdropHeight: height / 3.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    alignItems: \"center\",\n    paddingY: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    color: \"white\",\n    fontSize: 44,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  }, \"Afya Bora\")), React.createElement(Box, {\n    bg: \"white\",\n    position: \"relative\",\n    shadow: 2,\n    rounded: \"xl\",\n    padding: 5,\n    marginX: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, React.createElement(VStack, {\n    space: 5,\n    marginBottom: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, React.createElement(ControllerFormInput, {\n    name: \"email\",\n    control: control,\n    label: \"Email or phone number\",\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), React.createElement(ControllerFormInput, {\n    name: \"password\",\n    control: control,\n    label: \"Enter Password\",\n    keyboardType: \"password\",\n    type: visibility === \"eye-outline\" ? \"text\" : \"password\",\n    InputRightElement: React.createElement(Pressable, {\n      onPress: function onPress() {\n        return visibility === \"eye-outline\" ? setVisibility(\"eye-off-outline\") : setVisibility(\"eye-outline\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      name: visibility,\n      size: 24,\n      color: colors.primary,\n      style: {\n        paddingEnd: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 10\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), React.createElement(HStack, {\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, React.createElement(CheckBox, {\n    item: \"Remember me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 8\n    }\n  }), React.createElement(Stack, {\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 8\n    }\n  }, React.createElement(Pressable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    color: \"#2AD3E7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 10\n    }\n  }, \"Forgot Password\"))))), React.createElement(Box, {\n    position: \"absolute\",\n    bottom: -20,\n    left: 0,\n    right: 0,\n    width: \"100%\",\n    paddingX: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 6\n    }\n  }, React.createElement(PrimaryButton, {\n    text: \"Login\",\n    shadow: 5,\n    isLoading: isLoading,\n    disabled: isLoading,\n    press: handleSubmit(onLogin, function () {\n      console.log(\"Ther is a form error\");\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  })))), React.createElement(Stack, {\n    alignItems: \"center\",\n    marginBottom: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 4\n    }\n  }, React.createElement(HStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 6\n    }\n  }, \" Don't have an account? \"), React.createElement(Pressable, {\n    focusable: true,\n    onPress: function onPress() {\n      navigation.navigate(PlainAppNavKey.SignUpViewScreen);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    bold: true,\n    color: colors.primary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, \"Sign up now!\")))));\n}\n;","map":{"version":3,"sources":["/Users/mac/Desktop/inspiredideas/afya-bora/src/views/Login.tsx"],"names":["Box","HStack","Pressable","Stack","Text","View","VStack","React","MaterialCommunityIcons","colors","CheckBox","PrimaryButton","useNavigation","yup","useForm","NavKey","PlainAppNavKey","useAuthStore","AltContainer","ControllerFormInput","useMutation","schema","object","shape","email","string","required","password","nullable","Login","useState","visibility","setVisibility","navigation","login","state","signInWithEmailAndPassword","Dimensions","get","height","control","handleSubmit","errors","formState","onLogin","console","log","loginInWithEmailAndPassword","onMutate","variables","onError","error","context","onSuccess","data","mutate","isLoading","primary","paddingEnd","navigate","SignUpViewScreen"],"mappings":"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","sourcesContent":["import {\n\tBox,\n\tCenter,\n\tHStack,\n\tInput,\n\tPressable,\n\tScrollView,\n\tStack,\n\tText,\n\tView,\n\tSquare,\n\tVStack,\n} from \"native-base\";\nimport * as React from \"react\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { colors } from \"../contants/colors\";\nimport { CheckBox } from \"../components/bars\";\nimport { PrimaryButton } from \"../components/button\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Dimensions } from \"react-native\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport { NavKey as PlainAppNavKey } from './_Plain'\nimport { useAuthStore } from \"../internals/auth/context\";\nimport AltContainer from \"../components/containers/AltContainer\";\nimport { ControllerFormInput } from \"../components/forms/inputs\";\nimport { useCallback } from \"react\";\nimport { useMutation } from \"react-query\";\n\ninterface LoginFormInputs {\n\temail: string;\n\tpassword: string;\n}\n\nconst schema = yup.object().shape({\n\temail: yup.string().email().required(),\n\tpassword: yup.string().nullable().required(),\n});\n\n// let render = 0\n\nexport default function Login() {\n\t// const [remember, setRemember] = React.useState(false);\n\tconst [visibility, setVisibility] = React.useState(\"eye-off-outline\");\n\tconst navigation = useNavigation();\n\tconst login = useAuthStore(state => state.signInWithEmailAndPassword)\n\n\tconst { height } = Dimensions.get(\"screen\");\n\n\tconst {\n\t\tcontrol,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm<LoginFormInputs>({\n\t\t// resolver: yupResolver(schema),\n\t});\n\n\tconst onLogin = () => {\n\t\tconsole.log(\"Logging in \")\n\t\tloginInWithEmailAndPassword()\n\n\t};\n\n\t// TODO: pass to login the correct email and password\n\tconst { mutate: loginInWithEmailAndPassword, isLoading } = useMutation(() => login(\"demoemil@gmail.com\", \"password\"), {\n\t\tonMutate: variables => {\n\t\t},\n\t\tonError: (error, variables, context) => {\n\t\t\tconsole.log(\"Something went wrong\")\n\t\t},\n\t\tonSuccess: (data, variables, context) => {\n\t\t\tconsole.log(\"User logged in successfully \")\n\n\t\t\t// Boom baby!\n\t\t},\n\n\t})\n\n\n\t// console.log('Rendering loginpage:', render++)\n\treturn (\n\t\t<AltContainer backdropHeight={height / 3.5}>\n\t\t\t{/* <Stack alignItems=\"center\" style={{ paddingVertical: 10 }}> */}\n\t\t\t<View flexGrow={1}>\n\t\t\t\t<View alignItems=\"center\" paddingY={20}>\n\t\t\t\t\t<Text color=\"white\" fontSize={44}>\n\t\t\t\t\t\tAfya Bora\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t\t{/* </Stack> */}\n\t\t\t\t{/* <Stack paddingBottom={10}> */}\n\t\t\t\t<Box bg=\"white\" position=\"relative\" shadow={2} rounded=\"xl\" padding={5} marginX={5}>\n\t\t\t\t\t<VStack space={5} marginBottom={15}>\n\t\t\t\t\t\t<ControllerFormInput\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\tlabel=\"Email or phone number\"\n\t\t\t\t\t\t\tkeyboardType=\"email-address\" />\n\n\t\t\t\t\t\t<ControllerFormInput\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\tlabel=\"Enter Password\"\n\t\t\t\t\t\t\tkeyboardType=\"password\"\n\t\t\t\t\t\t\ttype={\n\t\t\t\t\t\t\t\tvisibility === \"eye-outline\"\n\t\t\t\t\t\t\t\t\t? \"text\"\n\t\t\t\t\t\t\t\t\t: \"password\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tInputRightElement={\n\t\t\t\t\t\t\t\t<Pressable\n\t\t\t\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t\t\t\tvisibility ===\n\t\t\t\t\t\t\t\t\t\t\t\"eye-outline\"\n\t\t\t\t\t\t\t\t\t\t\t? setVisibility(\n\t\t\t\t\t\t\t\t\t\t\t\t\"eye-off-outline\"\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t: setVisibility(\n\t\t\t\t\t\t\t\t\t\t\t\t\"eye-outline\"\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MaterialCommunityIcons\n\t\t\t\t\t\t\t\t\t\tname={visibility}\n\t\t\t\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\t\t\t\tcolor={\n\t\t\t\t\t\t\t\t\t\t\tcolors.primary\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tpaddingEnd: 10,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Pressable>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* Remeber me + Forgot Password */}\n\t\t\t\t\t\t<HStack justifyContent=\"space-between\">\n\t\t\t\t\t\t\t<CheckBox item={\"Remember me\"} />\n\n\t\t\t\t\t\t\t<Stack justifyContent=\"center\">\n\t\t\t\t\t\t\t\t<Pressable>\n\t\t\t\t\t\t\t\t\t<Text color={\"#2AD3E7\"}>\n\t\t\t\t\t\t\t\t\t\tForgot Password\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</Pressable>\n\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t</HStack>\n\t\t\t\t\t</VStack>\n\t\t\t\t\t<Box position=\"absolute\" bottom={-20} left={0} right={0} width=\"100%\" paddingX={10}>\n\t\t\t\t\t\t<PrimaryButton\n\t\t\t\t\t\t\ttext={\"Login\"}\n\t\t\t\t\t\t\tshadow={5}\n\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\tpress={handleSubmit(onLogin, () => {\n\t\t\t\t\t\t\t\tconsole.log(\"Ther is a form error\")\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t\t{/* </Stack> */}\n\t\t\t</View>\n\n\t\t\t<Stack alignItems=\"center\" marginBottom={5}>\n\t\t\t\t<HStack>\n\t\t\t\t\t<Text> Don't have an account? </Text>\n\t\t\t\t\t<Pressable\n\t\t\t\t\t\tfocusable\n\n\t\t\t\t\t\t// TODO: detect platform and show cursor=\"Pointer\" only in web\n\t\t\t\t\t\t// using Platform api in RN\n\t\t\t\t\t\t// cursor=\"pointer\"\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tnavigation.navigate(PlainAppNavKey.SignUpViewScreen);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text bold color={colors.primary}>\n\t\t\t\t\t\t\tSign up now!\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Pressable>\n\t\t\t\t</HStack>\n\t\t\t</Stack>\n\t\t</AltContainer>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}