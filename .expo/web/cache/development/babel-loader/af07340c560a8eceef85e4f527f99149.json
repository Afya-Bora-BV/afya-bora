{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/mac/Desktop/inspiredideas/afya-bora/src/App.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from \"react\";\nimport { extendTheme, NativeBaseProvider } from \"native-base\";\nimport { DefaultTheme, NavigationContainer } from \"@react-navigation/native\";\nimport { useFonts } from 'expo-font';\nimport { colors } from \"./contants/colors\";\nimport { AuthProvider, useAuthStore } from \"./internals/auth/context\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport PlainAppView from \"./views/_Plain\";\nimport AuthenticatedAppView from \"./views/_Authenticated\";\nimport { AppointmentTempoStoreProvider } from \"./internals/appointment/context\";\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { FindFacility } from \"./views/Home/MapFacility/FindFacility\";\nvar queryClient = new QueryClient();\nexport var theme = extendTheme({\n  fontConfig: {\n    \"Ubuntu\": {\n      100: {\n        normal: 'Ubuntu-Light',\n        italic: 'Ubuntu-LightItalic'\n      },\n      200: {\n        normal: 'Ubuntu-Light',\n        italic: 'Ubuntu-LightItalic'\n      },\n      300: {\n        normal: 'Ubuntu-Light',\n        italic: 'Ubuntu-LightItalic'\n      },\n      400: {\n        normal: 'Ubuntu-Regular',\n        italic: 'Ubuntu-Italic'\n      },\n      500: {\n        normal: 'Ubuntu-Medium',\n        italic: 'Ubuntu-MediumItalic'\n      },\n      600: {\n        normal: 'Ubuntu-Medium',\n        italic: 'Ubuntu-MediumItalic'\n      },\n      700: {\n        normal: 'Ubuntu-Bold',\n        italic: 'Ubuntu-BoldItalic'\n      },\n      800: {\n        normal: 'Ubuntu-Bold',\n        italic: 'Ubuntu-BoldItalic'\n      },\n      900: {\n        normal: 'Ubuntu-Bold',\n        italic: 'Ubuntu-BoldItalic'\n      }\n    }\n  },\n  fonts: {\n    heading: 'Ubuntu',\n    body: 'Ubuntu',\n    mono: 'Ubuntu'\n  },\n  colors: {},\n  config: {\n    initialColorMode: \"light\"\n  },\n  components: {\n    Button: {\n      baseStyle: {\n        backgroundColor: colors.primary\n      }\n    },\n    Input: {\n      baseStyle: {},\n      variants: {\n        rounded: {\n          borderRadius: 16\n        }\n      }\n    }\n  }\n});\nexport var AppTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  dark: false,\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    background: \"white\"\n  })\n});\n\nfunction Main() {\n  return React.createElement(AuthenticatedAppView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  });\n  var user = useAuthStore(function (state) {\n    return state.user;\n  });\n  useEffect(function () {}, []);\n\n  if (user !== null && user !== undefined) {\n    return React.createElement(AuthenticatedAppView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 4\n      }\n    });\n  }\n\n  return React.createElement(PlainAppView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default function App() {\n  var _useFonts = useFonts({\n    \"Ubuntu-Bold\": require(\"./assets/fonts/Ubuntu-Bold.ttf\"),\n    \"Ubuntu-BoldItalic\": require(\"./assets/fonts/Ubuntu-BoldItalic.ttf\"),\n    \"Ubuntu-Light\": require(\"./assets/fonts/Ubuntu-Light.ttf\"),\n    \"Ubuntu-LightItalic\": require(\"./assets/fonts/Ubuntu-LightItalic.ttf\"),\n    \"Ubuntu-Medium\": require(\"./assets/fonts/Ubuntu-Medium.ttf\"),\n    \"Ubuntu-MediumItalic\": require(\"./assets/fonts/Ubuntu-MediumItalic.ttf\"),\n    \"Ubuntu-Regular\": require(\"./assets/fonts/Ubuntu-Regular.ttf\"),\n    \"Ubuntu-Italic\": require(\"./assets/fonts/Ubuntu-Italic.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  return React.createElement(SafeAreaProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 3\n    }\n  }, React.createElement(NativeBaseProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 4\n    }\n  }, React.createElement(NavigationContainer, {\n    theme: AppTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, React.createElement(AuthProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 6\n    }\n  }, React.createElement(AppointmentTempoStoreProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, React.createElement(QueryClientProvider, {\n    client: queryClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 8\n    }\n  }, React.createElement(FindFacility, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  })))))));\n}","map":{"version":3,"sources":["/Users/mac/Desktop/inspiredideas/afya-bora/src/App.tsx"],"names":["React","useEffect","extendTheme","NativeBaseProvider","DefaultTheme","NavigationContainer","useFonts","colors","AuthProvider","useAuthStore","SafeAreaProvider","PlainAppView","AuthenticatedAppView","AppointmentTempoStoreProvider","QueryClient","QueryClientProvider","FindFacility","queryClient","theme","fontConfig","normal","italic","fonts","heading","body","mono","config","initialColorMode","components","Button","baseStyle","backgroundColor","primary","Input","variants","rounded","borderRadius","AppTheme","dark","background","Main","user","state","undefined","App","require","fontsLoaded"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,aAAhD;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,0BAAlD;AAEA,SAASC,QAAT,QAAyB,WAAzB;AAEA,SAASC,MAAT;AAEA,SAASC,YAAT,EAAuBC,YAAvB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,YAAP;AACA,OAAOC,oBAAP;AACA,SAASC,6BAAT;AAEA,SACCC,WADD,EAECC,mBAFD,QAGO,aAHP;AAIA,SAASC,YAAT;AAEA,IAAMC,WAAW,GAAG,IAAIH,WAAJ,EAApB;AAIA,OAAO,IAAMI,KAAK,GAAGhB,WAAW,CAAC;AAChCiB,EAAAA,UAAU,EAAE;AACX,cAAU;AACT,WAAK;AACJC,QAAAA,MAAM,EAAE,cADJ;AAEJC,QAAAA,MAAM,EAAE;AAFJ,OADI;AAKT,WAAK;AACJD,QAAAA,MAAM,EAAE,cADJ;AAEJC,QAAAA,MAAM,EAAE;AAFJ,OALI;AAST,WAAK;AACJD,QAAAA,MAAM,EAAE,cADJ;AAEJC,QAAAA,MAAM,EAAE;AAFJ,OATI;AAaT,WAAK;AACJD,QAAAA,MAAM,EAAE,gBADJ;AAEJC,QAAAA,MAAM,EAAE;AAFJ,OAbI;AAiBT,WAAK;AACJD,QAAAA,MAAM,EAAE,eADJ;AAEJC,QAAAA,MAAM,EAAE;AAFJ,OAjBI;AAqBT,WAAK;AACJD,QAAAA,MAAM,EAAE,eADJ;AAEJC,QAAAA,MAAM,EAAE;AAFJ,OArBI;AAyBT,WAAK;AACJD,QAAAA,MAAM,EAAE,aADJ;AAEJC,QAAAA,MAAM,EAAE;AAFJ,OAzBI;AA6BT,WAAK;AACJD,QAAAA,MAAM,EAAE,aADJ;AAEJC,QAAAA,MAAM,EAAE;AAFJ,OA7BI;AAiCT,WAAK;AACJD,QAAAA,MAAM,EAAE,aADJ;AAEJC,QAAAA,MAAM,EAAE;AAFJ;AAjCI;AADC,GADoB;AAyChCC,EAAAA,KAAK,EAAE;AACNC,IAAAA,OAAO,EAAE,QADH;AAENC,IAAAA,IAAI,EAAE,QAFA;AAGNC,IAAAA,IAAI,EAAE;AAHA,GAzCyB;AA8ChClB,EAAAA,MAAM,EAAE,EA9CwB;AAiEhCmB,EAAAA,MAAM,EAAE;AAEPC,IAAAA,gBAAgB,EAAE;AAFX,GAjEwB;AAqEhCC,EAAAA,UAAU,EAAE;AACXC,IAAAA,MAAM,EAAE;AACPC,MAAAA,SAAS,EAAE;AACVC,QAAAA,eAAe,EAAExB,MAAM,CAACyB;AADd;AADJ,KADG;AAMXC,IAAAA,KAAK,EAAE;AACNH,MAAAA,SAAS,EAAE,EADL;AAINI,MAAAA,QAAQ,EAAE;AACTC,QAAAA,OAAO,EAAE;AACRC,UAAAA,YAAY,EAAE;AADN;AADA;AAJJ;AANI;AArEoB,CAAD,CAAzB;AAwFP,OAAO,IAAMC,QAAQ,mCACjBjC,YADiB;AAEpBkC,EAAAA,IAAI,EAAE,KAFc;AAGpB/B,EAAAA,MAAM,kCACFH,YAAY,CAACG,MADX;AAELgC,IAAAA,UAAU,EAAE;AAFP;AAHc,EAAd;;AASP,SAASC,IAAT,GAAgB;AACf,SAAO,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA,MAAMC,IAAI,GAAGhC,YAAY,CAAC,UAACiC,KAAD;AAAA,WAAWA,KAAK,CAACD,IAAjB;AAAA,GAAD,CAAzB;AAIAxC,EAAAA,SAAS,CAAC,YAAM,CAKf,CALQ,EAKN,EALM,CAAT;;AAUA,MAAIwC,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAKE,SAA9B,EAAyC;AACxC,WACC,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGA;;AAGD,SAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA;;AAED,eAAe,SAASC,GAAT,GAAe;AAC7B,kBAAoBtC,QAAQ,CAAC;AAC5B,mBAAeuC,OAAO,kCADM;AAE5B,yBAAqBA,OAAO,wCAFA;AAI5B,oBAAgBA,OAAO,mCAJK;AAK5B,0BAAsBA,OAAO,yCALD;AAO5B,qBAAiBA,OAAO,oCAPI;AAQ5B,2BAAuBA,OAAO,0CARF;AAU5B,sBAAkBA,OAAO,qCAVG;AAW5B,qBAAiBA,OAAO;AAXI,GAAD,CAA5B;AAAA;AAAA,MAAKC,WAAL;;AAcA,SACC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE5B,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEmB,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGC,oBAAC,6BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,mBAAD;AAAqB,IAAA,MAAM,EAAEpB,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,CAHD,CADD,CADD,CADD,CADD;AAmBA","sourcesContent":["import React, { useEffect } from \"react\";\nimport SplashScreen from 'react-native-splash-screen'\n\nimport { extendTheme, NativeBaseProvider } from \"native-base\"\nimport { DefaultTheme, NavigationContainer } from \"@react-navigation/native\";\n\nimport { useFonts } from 'expo-font'\n\nimport { colors } from \"./contants/colors\";\n\nimport { AuthProvider, useAuthStore } from './internals/auth/context';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport PlainAppView from \"./views/_Plain\";\nimport AuthenticatedAppView from './views/_Authenticated';\nimport { AppointmentTempoStoreProvider } from './internals/appointment/context';\n\nimport {\n\tQueryClient,\n\tQueryClientProvider,\n} from 'react-query'\nimport { FindFacility } from \"./views/Home/MapFacility/FindFacility\";\n\nconst queryClient = new QueryClient()\n\n\n\nexport const theme = extendTheme({\n\tfontConfig: {\n\t\t\"Ubuntu\": {\n\t\t\t100: {\n\t\t\t\tnormal: 'Ubuntu-Light',\n\t\t\t\titalic: 'Ubuntu-LightItalic',\n\t\t\t},\n\t\t\t200: {\n\t\t\t\tnormal: 'Ubuntu-Light',\n\t\t\t\titalic: 'Ubuntu-LightItalic',\n\t\t\t},\n\t\t\t300: {\n\t\t\t\tnormal: 'Ubuntu-Light',\n\t\t\t\titalic: 'Ubuntu-LightItalic',\n\t\t\t},\n\t\t\t400: {\n\t\t\t\tnormal: 'Ubuntu-Regular',\n\t\t\t\titalic: 'Ubuntu-Italic',\n\t\t\t},\n\t\t\t500: {\n\t\t\t\tnormal: 'Ubuntu-Medium',\n\t\t\t\titalic: 'Ubuntu-MediumItalic',\n\t\t\t},\n\t\t\t600: {\n\t\t\t\tnormal: 'Ubuntu-Medium',\n\t\t\t\titalic: 'Ubuntu-MediumItalic',\n\t\t\t},\n\t\t\t700: {\n\t\t\t\tnormal: 'Ubuntu-Bold',\n\t\t\t\titalic: 'Ubuntu-BoldItalic',\n\t\t\t},\n\t\t\t800: {\n\t\t\t\tnormal: 'Ubuntu-Bold',\n\t\t\t\titalic: 'Ubuntu-BoldItalic',\n\t\t\t},\n\t\t\t900: {\n\t\t\t\tnormal: 'Ubuntu-Bold',\n\t\t\t\titalic: 'Ubuntu-BoldItalic',\n\t\t\t},\n\t\t}\n\t},\n\tfonts: {\n\t\theading: 'Ubuntu',\n\t\tbody: 'Ubuntu',\n\t\tmono: 'Ubuntu',\n\t},\n\tcolors: {\n\t\t// Add new color\n\t\t//   primary: {\n\t\t//     50: '#E3F2F9',\n\t\t//     100: '#C5E4F3',\n\t\t//     200: '#A2D4EC',\n\t\t//     300: '#7AC1E4',\n\t\t//     400: '#47A9DA',\n\t\t//     500: '#0088CC',\n\t\t//     600: '#007AB8',\n\t\t//     700: '#006BA1',\n\t\t//     800: '#005885',\n\t\t//     900: '#003F5E',\n\t\t//   },\n\t\t// Redefinig only one shade, rest of the color will remain same.\n\t\t//   amber: {\n\t\t//     400: '#d97706',\n\t\t//   },\n\t},\n\tconfig: {\n\t\t// Changing initialColorMode to 'dark'\n\t\tinitialColorMode: \"light\",\n\t},\n\tcomponents: {\n\t\tButton: {\n\t\t\tbaseStyle: {\n\t\t\t\tbackgroundColor: colors.primary,\n\t\t\t},\n\t\t},\n\t\tInput: {\n\t\t\tbaseStyle: {\n\t\t\t\t// borderRadius: \"lg\",\n\t\t\t},\n\t\t\tvariants: {\n\t\t\t\trounded: {\n\t\t\t\t\tborderRadius: 16,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n});\n\nexport const AppTheme = {\n\t...DefaultTheme,\n\tdark: false,\n\tcolors: {\n\t\t...DefaultTheme.colors,\n\t\tbackground: \"white\",\n\t},\n};\n\nfunction Main() {\n\treturn <AuthenticatedAppView />\n\tconst user = useAuthStore((state) => state.user);\n\t// const [isSplashToClose, setSplashToHide] = useState(false);\n\n\t// eecuted when screen is viewed\n\tuseEffect(() => {\n\t\t// checks from storage, if there is internal state of the user\n\t\t//  if there is or missing, remove\n\t\t// setSplashToHide(true);\n\t\t// SplashScreen.hide()\n\t}, []);\n\n\t// Show splash screen if not ready\n\t// if (!isSplashToClose) return <Splash />;\n\n\tif (user !== null && user !== undefined) {\n\t\treturn (\n\t\t\t<AuthenticatedAppView />\n\t\t)\n\t}\n\n\t// Not authenticated\n\treturn <PlainAppView />\n}\n\nexport default function App() {\n\tlet [fontsLoaded] = useFonts({\n\t\t\"Ubuntu-Bold\": require('./assets/fonts/Ubuntu-Bold.ttf'),\n\t\t\"Ubuntu-BoldItalic\": require('./assets/fonts/Ubuntu-BoldItalic.ttf'),\n\n\t\t\"Ubuntu-Light\": require('./assets/fonts/Ubuntu-Light.ttf'),\n\t\t\"Ubuntu-LightItalic\": require('./assets/fonts/Ubuntu-LightItalic.ttf'),\n\n\t\t\"Ubuntu-Medium\": require('./assets/fonts/Ubuntu-Medium.ttf'),\n\t\t\"Ubuntu-MediumItalic\": require('./assets/fonts/Ubuntu-MediumItalic.ttf'),\n\n\t\t\"Ubuntu-Regular\": require('./assets/fonts/Ubuntu-Regular.ttf'),\n\t\t\"Ubuntu-Italic\": require('./assets/fonts/Ubuntu-Italic.ttf'),\n\t})\n\n\treturn (\n\t\t<SafeAreaProvider>\n\t\t\t<NativeBaseProvider theme={theme}>\n\t\t\t\t<NavigationContainer theme={AppTheme}>\n\t\t\t\t\t<AuthProvider>\n\n\t\t\t\t\t\t{/* TODO: find a better place for this provider */}\n\t\t\t\t\t\t<AppointmentTempoStoreProvider>\n\t\t\t\t\t\t\t<QueryClientProvider client={queryClient}>\n\t\t\t\t\t\t\t\t{/* <Main /> */}\n\t\t\t\t\t\t\t\t<FindFacility />\n\t\t\t\t\t\t\t</QueryClientProvider>\n\t\t\t\t\t\t</AppointmentTempoStoreProvider>\n\n\t\t\t\t\t</AuthProvider>\n\t\t\t\t</NavigationContainer>\n\t\t\t</NativeBaseProvider>\n\t\t</SafeAreaProvider>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}