{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/mac/Desktop/inspiredideas/afya-bora/src/components/forms/inputs.tsx\";\nvar _excluded = [\"label\", \"keyboardType\", \"control\", \"name\"];\nimport React from 'react';\nimport { Stack, Text, Spacer, Input } from 'native-base';\nimport { useController, Controller } from 'react-hook-form';\nexport function ControllerFormInput(_ref) {\n  var _this = this;\n\n  var label = _ref.label,\n      keyboardType = _ref.keyboardType,\n      control = _ref.control,\n      name = _ref.name,\n      inputProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useController = useController({\n    name: name,\n    control: control\n  }),\n      errors = _useController.formState.errors;\n\n  return React.createElement(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, label), React.createElement(Spacer, {\n    size: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n      return React.createElement(Input, _extends({\n        value: value,\n        onBlur: onBlur,\n        onChangeText: onChange,\n        outlineColor: errors[name] ? \"red\" : \"\",\n        variant: \"rounded\",\n        autoCapitalize: \"none\"\n      }, inputProps, {\n        placeholder: label,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }));\n    },\n    name: \"email\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/mac/Desktop/inspiredideas/afya-bora/src/components/forms/inputs.tsx"],"names":["React","Stack","Text","Spacer","Input","useController","Controller","ControllerFormInput","label","keyboardType","control","name","inputProps","errors","formState","field","onChange","onBlur","value","required"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,KAA9B,QAA2C,aAA3C;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,iBAA1C;AAKA,OAAO,SAASC,mBAAT,OAA2F;AAAA;;AAAA,MAA3DC,KAA2D,QAA3DA,KAA2D;AAAA,MAApDC,YAAoD,QAApDA,YAAoD;AAAA,MAAtCC,OAAsC,QAAtCA,OAAsC;AAAA,MAA7BC,IAA6B,QAA7BA,IAA6B;AAAA,MAApBC,UAAoB;;AAE9F,uBAAoCP,aAAa,CAAC;AAAEM,IAAAA,IAAI,EAAJA,IAAF;AAAQD,IAAAA,OAAO,EAAPA;AAAR,GAAD,CAAjD;AAAA,MAAqBG,MAArB,kBAAQC,SAAR,CAAqBD,MAArB;;AAEA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,KAAP,CADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,UAAD;AACI,IAAA,OAAO,EAAEE,OADb;AAEI,IAAA,MAAM,EAAE;AAAA,8BACJK,KADI;AAAA,UACKC,QADL,eACKA,QADL;AAAA,UACeC,MADf,eACeA,MADf;AAAA,UACuBC,KADvB,eACuBA,KADvB;AAAA,aAGJ,oBAAC,KAAD;AACI,QAAA,KAAK,EAAEA,KADX;AAEI,QAAA,MAAM,EAAED,MAFZ;AAGI,QAAA,YAAY,EAAED,QAHlB;AAII,QAAA,YAAY,EACRH,MAAM,CAACF,IAAD,CAAN,GAAe,KAAf,GAAuB,EAL/B;AAOI,QAAA,OAAO,EAAC,SAPZ;AAQI,QAAA,cAAc,EAAE;AARpB,SASVC,UATU;AAUI,QAAA,WAAW,EAAEJ,KAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHI;AAAA,KAFZ;AAkBI,IAAA,IAAI,EAAC,OAlBT;AAmBI,IAAA,KAAK,EAAE;AAAEW,MAAAA,QAAQ,EAAE;AAAZ,KAnBX;AAoBI,IAAA,YAAY,EAAC,EApBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AA4BH","sourcesContent":["import React from 'react'\nimport { Stack, Text, Spacer, Input } from 'native-base'\nimport { useController, Controller } from 'react-hook-form';\n\n/**\n * Input form that uses react controller\n */\nexport function ControllerFormInput ({ label, keyboardType, control, name, ...inputProps }: any)  {\n    // console.log({ others })\n    const { formState: { errors }, } =  useController({ name, control });\n\n    return (\n        <Stack>\n            <Text>{label}</Text>\n            <Spacer size={2} />\n            <Controller\n                control={control}\n                render={({\n                    field: { onChange, onBlur, value },\n                }) => (\n                    <Input\n                        value={value}\n                        onBlur={onBlur}\n                        onChangeText={onChange}\n                        outlineColor={\n                            errors[name] ? \"red\" : \"\"\n                        }\n                        variant=\"rounded\"\n                        autoCapitalize={\"none\"}\n\t\t\t\t\t\t{...inputProps}\n                        placeholder={label}\n                    />\n                )}\n                name=\"email\"\n                rules={{ required: true }}\n                defaultValue=\"\"\n            />\n        </Stack>\n    )\n}"]},"metadata":{},"sourceType":"module"}