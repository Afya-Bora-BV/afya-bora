{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/mac/Desktop/inspiredideas/afya-bora/src/views/Home/MapFacility/FindFacilityList.tsx\";\n\nimport { useNavigation } from \"@react-navigation/core\";\nimport { Heading, ScrollView, Stack, VStack } from \"native-base\";\nimport React, { useCallback } from \"react\";\nimport { ConsultantListItem } from \"../../../components/consultant-list-item\";\nimport { FacilityListItem } from \"../../../components/facilities-list-item\";\nimport { HeaderWithRText } from \"../../../components/header\";\nimport { consultants } from \"../../../data/consultants\";\nimport { facilities } from \"../../../data/facilities\";\nimport { NavKey as BookAppointmentNavKey } from \"../BookAppointment\";\nimport { HomeNavKey as MainNavKey } from \"../\";\nexport var FindFacilityList = function FindFacilityList() {\n  var navigation = useNavigation();\n\n  var nav = function nav() {\n    navigation.navigate(\"Home\");\n  };\n\n  var nearest = function nearest() {};\n\n  var selectFacility = function selectFacility(facility) {\n    return navigation.navigate(\"SetAppointmentTime\", {\n      facility: facility\n    });\n  };\n\n  var facility = facilities[0];\n  var selectConsultant = useCallback(function (consultant) {\n    navigation.navigate(MainNavKey.BookAppointmentViewScreen, {\n      screen: BookAppointmentNavKey.SetAppointmentTimeScreen,\n      params: {\n        consultant: consultant\n      }\n    });\n  }, [navigation]);\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, React.createElement(Stack, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, React.createElement(VStack, {\n    p: 2,\n    space: 6,\n    paddingTop: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(HeaderWithRText, {\n    text: \"Select Hospital\",\n    rText: \"Nearest\",\n    iconPress: nav,\n    onPress: nearest,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }), React.createElement(VStack, {\n    space: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }\n  }, React.createElement(FacilityListItem, {\n    onPress: function onPress() {},\n    key: facility.id,\n    facility: facility,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  })), React.createElement(VStack, {\n    space: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }\n  }, React.createElement(Heading, {\n    fontSize: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Consultants at This Facility\"), React.createElement(VStack, {\n    space: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, consultants.map(function (consultant) {\n    return React.createElement(ConsultantListItem, {\n      onPress: function onPress() {\n        return selectConsultant(consultant);\n      },\n      key: consultant.id,\n      consultant: consultant,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    });\n  }))))));\n};\nexport default FindFacilityList;","map":{"version":3,"sources":["/Users/mac/Desktop/inspiredideas/afya-bora/src/views/Home/MapFacility/FindFacilityList.tsx"],"names":["useNavigation","Heading","ScrollView","Stack","VStack","React","useCallback","ConsultantListItem","FacilityListItem","HeaderWithRText","consultants","facilities","NavKey","BookAppointmentNavKey","HomeNavKey","MainNavKey","FindFacilityList","navigation","nav","navigate","nearest","selectFacility","facility","selectConsultant","consultant","BookAppointmentViewScreen","screen","SetAppointmentTimeScreen","params","id","map"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,wBAA9B;AACA,SAAcC,OAAd,EAAuBC,UAAvB,EAAmCC,KAAnC,EAAqDC,MAArD,QAAmE,aAAnE;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,kBAAT;AACA,SAASC,gBAAT;AACA,SAASC,eAAT;AACA,SAASC,WAAT;AACA,SAASC,UAAT;AACA,SAASC,MAAM,IAAIC,qBAAnB;AACA,SAASC,UAAU,IAAIC,UAAvB;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACrC,MAAMC,UAAU,GAAGjB,aAAa,EAAhC;;AAEA,MAAMkB,GAAG,GAAG,SAANA,GAAM,GAAM;AACjBD,IAAAA,UAAU,CAACE,QAAX,CAAoB,MAApB;AACA,GAFD;;AAIA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM,CAAG,CAAzB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD;AAAA,WAAmBL,UAAU,CAACE,QAAX,CAAoB,oBAApB,EAA0C;AAAEG,MAAAA,QAAQ,EAARA;AAAF,KAA1C,CAAnB;AAAA,GAAvB;;AAGA,MAAMA,QAAQ,GAAGX,UAAU,CAAC,CAAD,CAA3B;AAEA,MAAMY,gBAAgB,GAAGjB,WAAW,CAAC,UAACkB,UAAD,EAAqB;AACzDP,IAAAA,UAAU,CAACE,QAAX,CAAoBJ,UAAU,CAACU,yBAA/B,EAA0D;AACzDC,MAAAA,MAAM,EAAEb,qBAAqB,CAACc,wBAD2B;AAEzDC,MAAAA,MAAM,EAAE;AAAEJ,QAAAA,UAAU,EAAVA;AAAF;AAFiD,KAA1D;AAIA,GALmC,EAKjC,CAACP,UAAD,CALiC,CAApC;AAOA,SACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEC,oBAAC,MAAD;AAAQ,IAAA,CAAC,EAAE,CAAX;AAAc,IAAA,KAAK,EAAE,CAArB;AAAwB,IAAA,UAAU,EAAE,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEC,oBAAC,eAAD;AACC,IAAA,IAAI,EAAE,iBADP;AAEC,IAAA,KAAK,EAAE,SAFR;AAGC,IAAA,SAAS,EAAEC,GAHZ;AAIC,IAAA,OAAO,EAAEE,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EASC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,gBAAD;AACC,IAAA,OAAO,EAAE,mBAAM,CAAG,CADnB;AAEC,IAAA,GAAG,EAAEE,QAAQ,CAACO,EAFf;AAGC,IAAA,QAAQ,EAAEP,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CATD,EAgBC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADD,EAEC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEZ,WAAW,CAACoB,GAAZ,CAAgB,UAACN,UAAD;AAAA,WAChB,oBAAC,kBAAD;AACC,MAAA,OAAO,EAAE;AAAA,eAAMD,gBAAgB,CAACC,UAAD,CAAtB;AAAA,OADV;AAEC,MAAA,GAAG,EAAEA,UAAU,CAACK,EAFjB;AAGC,MAAA,UAAU,EAAEL,UAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB;AAAA,GAAhB,CADF,CAFD,CAhBD,CAFD,CADD,CADD;AAoCA,CAzDM;AA2DP,eAAeR,gBAAf","sourcesContent":["import { useNavigation } from \"@react-navigation/core\";\nimport { Box, Heading, ScrollView, Stack, StatusBar, VStack } from \"native-base\";\nimport React, { useCallback } from \"react\";\nimport { ConsultantListItem } from \"../../../components/consultant-list-item\";\nimport { FacilityListItem } from \"../../../components/facilities-list-item\";\nimport { HeaderWithRText } from \"../../../components/header\";\nimport { consultants } from \"../../../data/consultants\";\nimport { facilities } from \"../../../data/facilities\";\nimport { NavKey as BookAppointmentNavKey } from \"../BookAppointment\";\nimport { HomeNavKey as MainNavKey } from \"../\";\n\nexport const FindFacilityList = () => {\n\tconst navigation = useNavigation();\n\n\tconst nav = () => {\n\t\tnavigation.navigate(\"Home\");\n\t};\n\n\tconst nearest = () => { };\n\n\tconst selectFacility = (facility: any) => navigation.navigate(\"SetAppointmentTime\", { facility });\n\n\t// TODO: facility should come from map screen\n\tconst facility = facilities[0]\n\n\tconst selectConsultant = useCallback((consultant: any) => {\n\t\tnavigation.navigate(MainNavKey.BookAppointmentViewScreen, {\n\t\t\tscreen: BookAppointmentNavKey.SetAppointmentTimeScreen,\n\t\t\tparams: { consultant },\n\t\t})\n\t}, [navigation])\n\n\treturn (\n\t\t<ScrollView>\n\t\t\t<Stack>\n\t\t\t\t{/* <StatusBar barStyle=\"dark-content\" backgroundColor={\"#fff\"} /> */}\n\t\t\t\t<VStack p={2} space={6} paddingTop={8}>\n\t\t\t\t\t{/* TODO: to be moved to components folder */}\n\t\t\t\t\t<HeaderWithRText\n\t\t\t\t\t\ttext={\"Select Hospital\"}\n\t\t\t\t\t\trText={\"Nearest\"}\n\t\t\t\t\t\ticonPress={nav}\n\t\t\t\t\t\tonPress={nearest}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<VStack space={2}>\n\t\t\t\t\t\t<FacilityListItem\n\t\t\t\t\t\t\tonPress={() => { }}\n\t\t\t\t\t\t\tkey={facility.id}\n\t\t\t\t\t\t\tfacility={facility}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</VStack>\n\t\t\t\t\t<VStack space={3}>\n\t\t\t\t\t\t<Heading fontSize=\"md\">Consultants at This Facility</Heading>\n\t\t\t\t\t\t<VStack space={2}>\n\t\t\t\t\t\t\t{consultants.map((consultant) => (\n\t\t\t\t\t\t\t\t<ConsultantListItem\n\t\t\t\t\t\t\t\t\tonPress={() => selectConsultant(consultant)}\n\t\t\t\t\t\t\t\t\tkey={consultant.id}\n\t\t\t\t\t\t\t\t\tconsultant={consultant}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</VStack>\n\t\t\t\t\t</VStack>\n\t\t\t\t</VStack>\n\t\t\t</Stack>\n\t\t</ScrollView>\n\t);\n};\n\nexport default FindFacilityList;\n"]},"metadata":{},"sourceType":"module"}