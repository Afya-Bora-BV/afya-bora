{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Desktop/inspiredideas/afya-bora/src/components/bars.tsx\";\n\nimport React from \"react\";\nimport { Stack, Text, Pressable, Checkbox } from \"native-base\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { colors } from \"../contants/colors\";\nimport { useState } from \"react\";\nexport var TimeSet = function TimeSet(_ref) {\n  var time = _ref.time;\n\n  var _useState = useState(\"unchecked\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  return React.createElement(Pressable, {\n    onPress: function onPress() {\n      state === \"checked\" ? setState(\"unhecked\") : setState(\"checked\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, React.createElement(Stack, {\n    borderColor: state === \"checked\" ? \"transparent\" : \"grey\",\n    borderWidth: 1,\n    borderRadius: 10,\n    height: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: state === \"checked\" ? \"#2AD3E7\" : \"transparent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    color: state === \"checked\" ? \"white\" : \"grey\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, time)));\n};\nexport var FBLogo = function FBLogo() {\n  var _useState3 = useState(\"unchecked\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      state = _useState4[0],\n      setState = _useState4[1];\n\n  return React.createElement(Pressable, {\n    onPress: function onPress() {\n      state === \"checked\" ? setState(\"unhecked\") : setState(\"checked\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }, React.createElement(Stack, {\n    borderColor: state === \"checked\" ? \"transparent\" : \"grey\",\n    borderWidth: 1,\n    borderRadius: 10,\n    width: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: state === \"checked\" ? \"#E7E5FF\" : \"transparent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"facebook\",\n    size: 40,\n    color: state === \"checked\" ? colors.primary : \"grey\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  })));\n};\nexport var CheckBox = function CheckBox(_ref2) {\n  var item = _ref2.item;\n  return React.createElement(Stack, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 3\n    }\n  }, React.createElement(Checkbox, {\n    value: \"one\",\n    my: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }\n  }, item));\n};","map":{"version":3,"sources":["/Users/mac/Desktop/inspiredideas/afya-bora/src/components/bars.tsx"],"names":["React","Stack","Text","Pressable","Checkbox","MaterialCommunityIcons","colors","useState","TimeSet","time","state","setState","FBLogo","primary","CheckBox","item"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAECC,KAFD,EAKCC,IALD,EAMCC,SAND,EAQCC,QARD,QASO,aATP;AAUA,SAAoBC,sBAApB,QAAkD,oBAAlD;AACA,SAASC,MAAT;AAEA,SAASC,QAAT,QAAyB,OAAzB;AAOA,OAAO,IAAMC,OAA2B,GAAG,SAA9BA,OAA8B,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AACxD,kBAA0BF,QAAQ,CAAC,WAAD,CAAlC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AAEA,SACC,oBAAC,SAAD;AACC,IAAA,OAAO,EAAE,mBAAM;AACdD,MAAAA,KAAK,KAAK,SAAV,GACGC,QAAQ,CAAC,UAAD,CADX,GAEGA,QAAQ,CAAC,SAAD,CAFX;AAGA,KALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOC,oBAAC,KAAD;AACC,IAAA,WAAW,EAAED,KAAK,KAAK,SAAV,GAAsB,aAAtB,GAAsC,MADpD;AAEC,IAAA,WAAW,EAAE,CAFd;AAGC,IAAA,YAAY,EAAE,EAHf;AAIC,IAAA,MAAM,EAAE,CAJT;AAKC,IAAA,UAAU,EAAC,QALZ;AAMC,IAAA,cAAc,EAAC,QANhB;AAOC,IAAA,eAAe,EACdA,KAAK,KAAK,SAAV,GAAsB,SAAtB,GAAkC,aARpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEA,KAAK,KAAK,SAAV,GAAsB,OAAtB,GAAgC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,IADF,CAXD,CAPD,CADD;AAyBA,CA5BM;AA8BP,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS,GAAM;AAC3B,mBAA0BL,QAAQ,CAAC,WAAD,CAAlC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AACA,SACC,oBAAC,SAAD;AACC,IAAA,OAAO,EAAE,mBAAM;AACdD,MAAAA,KAAK,KAAK,SAAV,GACGC,QAAQ,CAAC,UAAD,CADX,GAEGA,QAAQ,CAAC,SAAD,CAFX;AAGA,KALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOC,oBAAC,KAAD;AACC,IAAA,WAAW,EAAED,KAAK,KAAK,SAAV,GAAsB,aAAtB,GAAsC,MADpD;AAEC,IAAA,WAAW,EAAE,CAFd;AAGC,IAAA,YAAY,EAAE,EAHf;AAKC,IAAA,KAAK,EAAE,EALR;AAMC,IAAA,UAAU,EAAC,QANZ;AAOC,IAAA,cAAc,EAAC,QAPhB;AAQC,IAAA,eAAe,EACdA,KAAK,KAAK,SAAV,GAAsB,SAAtB,GAAkC,aATpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYC,oBAAC,sBAAD;AACC,IAAA,IAAI,EAAC,UADN;AAEC,IAAA,IAAI,EAAE,EAFP;AAGC,IAAA,KAAK,EAAEA,KAAK,KAAK,SAAV,GAAsBJ,MAAM,CAACO,OAA7B,GAAuC,MAH/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZD,CAPD,CADD;AA4BA,CA9BM;AAoCP,OAAO,IAAMC,QAAgC,GAAG,SAAnCA,QAAmC,QAAc;AAAA,MAAXC,IAAW,SAAXA,IAAW;AAC7D,SACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,KAAhB;AAAsB,IAAA,EAAE,EAAE,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,IADF,CADD,CADD;AAOA,CARM","sourcesContent":["import React from \"react\";\nimport {\n\tInput,\n\tStack,\n\tCenter,\n\tNativeBaseProvider,\n\tText,\n\tPressable,\n\tHStack,\n\tCheckbox,\n} from \"native-base\";\nimport { AntDesign, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { colors } from \"../contants/colors\";\nimport { Alert } from \"react-native\";\nimport { useState } from \"react\";\nimport { NumberProp } from \"react-native-svg\";\n\ntype timeProp = {\n\ttime: string;\n};\n\nexport const TimeSet: React.FC<timeProp> = ({ time }) => {\n\tconst [state, setState] = useState(\"unchecked\");\n\n\treturn (\n\t\t<Pressable\n\t\t\tonPress={() => {\n\t\t\t\tstate === \"checked\"\n\t\t\t\t\t? setState(\"unhecked\")\n\t\t\t\t\t: setState(\"checked\");\n\t\t\t}}\n\t\t>\n\t\t\t<Stack\n\t\t\t\tborderColor={state === \"checked\" ? \"transparent\" : \"grey\"}\n\t\t\t\tborderWidth={1}\n\t\t\t\tborderRadius={10}\n\t\t\t\theight={8}\n\t\t\t\talignItems=\"center\"\n\t\t\t\tjustifyContent=\"center\"\n\t\t\t\tbackgroundColor={\n\t\t\t\t\tstate === \"checked\" ? \"#2AD3E7\" : \"transparent\"\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<Text color={state === \"checked\" ? \"white\" : \"grey\"}>\n\t\t\t\t\t{time}\n\t\t\t\t</Text>\n\t\t\t</Stack>\n\t\t</Pressable>\n\t);\n};\n\nexport const FBLogo = () => {\n\tconst [state, setState] = useState(\"unchecked\");\n\treturn (\n\t\t<Pressable\n\t\t\tonPress={() => {\n\t\t\t\tstate === \"checked\"\n\t\t\t\t\t? setState(\"unhecked\")\n\t\t\t\t\t: setState(\"checked\");\n\t\t\t}}\n\t\t>\n\t\t\t<Stack\n\t\t\t\tborderColor={state === \"checked\" ? \"transparent\" : \"grey\"}\n\t\t\t\tborderWidth={1}\n\t\t\t\tborderRadius={10}\n\t\t\t\t// height={30}\n\t\t\t\twidth={50}\n\t\t\t\talignItems=\"center\"\n\t\t\t\tjustifyContent=\"center\"\n\t\t\t\tbackgroundColor={\n\t\t\t\t\tstate === \"checked\" ? \"#E7E5FF\" : \"transparent\"\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<MaterialCommunityIcons\n\t\t\t\t\tname=\"facebook\"\n\t\t\t\t\tsize={40}\n\t\t\t\t\tcolor={state === \"checked\" ? colors.primary : \"grey\"}\n\t\t\t\t/>\n\t\t\t</Stack>\n\t\t</Pressable>\n\t);\n};\n\ntype checkBoxProp = {\n\titem: string;\n};\n\nexport const CheckBox: React.FC<checkBoxProp> = ({ item }) => {\n\treturn (\n\t\t<Stack>\n\t\t\t<Checkbox value=\"one\" my={2}>\n\t\t\t\t{item}\n\t\t\t</Checkbox>\n\t\t</Stack>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}