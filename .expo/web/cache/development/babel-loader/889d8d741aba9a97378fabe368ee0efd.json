{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/inspiredideas/afya-bora/src/internals/appointment/context.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport create from 'zustand';\nimport createContext from 'zustand/context';\nimport { persist } from \"zustand/middleware\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar DemoAppointment = {\n  \"complaint\": \"Hdhhd\",\n  \"consultant\": {\n    \"expertise\": \"General Practitioner\",\n    \"hospital\": \"Aga Khan Hospital\",\n    \"id\": \"uindlxAa\",\n    \"name\": \"Ally Salim\",\n    \"ratedBy\": 289,\n    \"rating\": 4,\n    \"region\": \"Arusha, Tanzania\",\n    \"time\": \"1:00\"\n  },\n  \"dateTime\": {\n    \"date\": \"2021 - 07 - 14T10: 04: 57.120Z\",\n    \"timeSlots\": [\"08:00 AM\", \"09:30 AM\"]\n  },\n  \"symptoms\": [\"Fever\", \"Skin Rash\"]\n};\n\nvar _createContext = createContext(),\n    Provider = _createContext.Provider,\n    useStore = _createContext.useStore;\n\nvar sleep = function sleep(delay) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, delay);\n  });\n};\n\nvar createAppointmentTempoStore = function createAppointmentTempoStore() {\n  return create(persist(function (set, get) {\n    return {\n      appointments: [],\n      getAppointments: function getAppointments() {\n        return _regeneratorRuntime.async(function getAppointments$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(sleep(3000));\n\n              case 2:\n                return _context.abrupt(\"return\", get().appointments);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      setAppointment: function setAppointment(appointment) {\n        return _regeneratorRuntime.async(function setAppointment$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(sleep(3000));\n\n              case 2:\n                set({\n                  appointments: [].concat(_toConsumableArray(get().appointments), [appointment])\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    };\n  }, {\n    name: \"appointments\",\n    getStorage: function getStorage() {\n      return Platform.OS !== \"web\" ? AsyncStorage : sessionStorage;\n    }\n  }));\n};\n\nfunction AppointmentTempoStoreProvider(_ref) {\n  var children = _ref.children;\n  return React.createElement(Provider, {\n    createStore: createAppointmentTempoStore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, children);\n}\n\nexport { useStore as useAppointmentTempoStore, AppointmentTempoStoreProvider };","map":{"version":3,"sources":["/Users/mac/Desktop/inspiredideas/afya-bora/src/internals/appointment/context.tsx"],"names":["React","create","createContext","persist","AsyncStorage","DemoAppointment","Provider","useStore","sleep","delay","Promise","resolve","setTimeout","createAppointmentTempoStore","set","get","appointments","getAppointments","setAppointment","appointment","name","getStorage","Platform","OS","sessionStorage","AppointmentTempoStoreProvider","children","useAppointmentTempoStore"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,IAAMC,eAAe,GAAG;AACpB,eAAa,OADO;AAEpB,gBAAc;AACV,iBAAa,sBADH;AAEV,gBAAY,mBAFF;AAGV,UAAM,UAHI;AAIV,YAAQ,YAJE;AAKV,eAAW,GALD;AAMV,cAAU,CANA;AAOV,cAAU,kBAPA;AAQV,YAAQ;AARE,GAFM;AAYpB,cAAY;AACR,YAAQ,gCADA;AAER,iBAAa,CACT,UADS,EAET,UAFS;AAFL,GAZQ;AAmBpB,cAAY,CACR,OADQ,EAER,WAFQ;AAnBQ,CAAxB;;AAkCA,qBAA+BH,aAAa,EAA5C;AAAA,IAAQI,QAAR,kBAAQA,QAAR;AAAA,IAAkBC,QAAlB,kBAAkBA,QAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SAAmB,IAAIC,OAAJ,CAAY,UAACC,OAAD;AAAA,WAAaC,UAAU,CAACD,OAAD,EAAUF,KAAV,CAAvB;AAAA,GAAZ,CAAnB;AAAA,CAAd;;AAGA,IAAMI,2BAA2B,GAAG,SAA9BA,2BAA8B;AAAA,SAAMZ,MAAM,CAAwBE,OAAO,CAAC,UAACW,GAAD,EAAMC,GAAN;AAAA,WAAe;AAC3FC,MAAAA,YAAY,EAAE,EAD6E;AAE3FC,MAAAA,eAAe,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACPT,KAAK,CAAC,IAAD,CADE;;AAAA;AAAA,iDAENO,GAAG,GAAGC,YAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAF0E;AAM3FE,MAAAA,cAAc,EAAE,wBAAgBC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACNX,KAAK,CAAC,IAAD,CADC;;AAAA;AAEZM,gBAAAA,GAAG,CAAC;AACAE,kBAAAA,YAAY,+BAAMD,GAAG,GAAGC,YAAZ,IAA0BG,WAA1B;AADZ,iBAAD,CAAH;;AAFY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAN2E,KAAf;AAAA,GAAD,EAY3E;AACAC,IAAAA,IAAI,EAAE,cADN;AAEAC,IAAAA,UAAU,EAAE;AAAA,aAAMC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwBnB,YAAxB,GAAuCoB,cAA7C;AAAA;AAFZ,GAZ2E,CAA/B,CAAZ;AAAA,CAApC;;AAkBA,SAASC,6BAAT,OAAiF;AAAA,MAAxCC,QAAwC,QAAxCA,QAAwC;AAC7E,SACI,oBAAC,QAAD;AAAU,IAAA,WAAW,EAAEb,2BAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKa,QADL,CADJ;AAKH;;AAGD,SACInB,QAAQ,IAAIoB,wBADhB,EAEIF,6BAFJ","sourcesContent":["import React from 'react'\nimport create from 'zustand'\nimport createContext from 'zustand/context'\nimport { persist } from \"zustand/middleware\"\nimport { Platform } from 'react-native'\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst DemoAppointment = {\n    \"complaint\": \"Hdhhd\",\n    \"consultant\": {\n        \"expertise\": \"General Practitioner\",\n        \"hospital\": \"Aga Khan Hospital\",\n        \"id\": \"uindlxAa\",\n        \"name\": \"Ally Salim\",\n        \"ratedBy\": 289,\n        \"rating\": 4,\n        \"region\": \"Arusha, Tanzania\",\n        \"time\": \"1:00\",\n    },\n    \"dateTime\": {\n        \"date\": \"2021 - 07 - 14T10: 04: 57.120Z\",\n        \"timeSlots\": [\n            \"08:00 AM\",\n            \"09:30 AM\",\n        ],\n    },\n    \"symptoms\": [\n        \"Fever\",\n        \"Skin Rash\",\n    ],\n}\n\nexport type DemoAppointmentType = typeof DemoAppointment\n\ninterface AppointmentTempoStore {\n    appointments: DemoAppointmentType[],\n    setAppointment: (appointment: DemoAppointmentType) => Promise<void>\n    getAppointments: () => Promise<DemoAppointmentType[]>\n\n}\n\nconst { Provider, useStore } = createContext<AppointmentTempoStore>()\n\nconst sleep = (delay: number) => new Promise((resolve) => setTimeout(resolve, delay))\n\n\nconst createAppointmentTempoStore = () => create<AppointmentTempoStore>(persist((set, get) => ({\n    appointments: [],\n    getAppointments: async function () {\n        await sleep(3000)\n        return get().appointments\n    },\n    setAppointment: async function (appointment) {\n        await sleep(3000)\n        set({\n            appointments: [...get().appointments, appointment]\n        })\n    }\n}), {\n    name: \"appointments\",\n    getStorage: () => Platform.OS !== \"web\" ? AsyncStorage : sessionStorage\n}))\n\ninterface AppointmentTempoStoreProps { children?: React.ReactElement }\nfunction AppointmentTempoStoreProvider({ children }: AppointmentTempoStoreProps) {\n    return (\n        <Provider createStore={createAppointmentTempoStore}>\n            {children}\n        </Provider>\n    )\n}\n\n\nexport {\n    useStore as useAppointmentTempoStore,\n    AppointmentTempoStoreProvider\n}\n"]},"metadata":{},"sourceType":"module"}