{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/inspiredideas/afya-bora/src/views/SignUp/SignUpScreen.tsx\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Box, HStack, VStack, View, Pressable, Stack, Text } from \"native-base\";\nimport { PrimaryButton } from \"../../components/button\";\nimport { colors } from \"../../contants/colors\";\nimport { NavKey as SignUpNavKey } from '.';\nimport { NavKey as PlainNavKey } from \"../_Plain\";\nimport AltContainer from \"../../components/containers/AltContainer\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { ControllerFormInput } from \"../../components/forms/inputs\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useCallback } from \"react\";\nvar schema = yup.object().shape({\n  password: yup.string().required()\n});\nexport default function SignUp() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      phoneNumber = _useState2[0],\n      setPhoneNumber = _useState2[1];\n\n  var _Dimensions$get = Dimensions.get(\"screen\"),\n      height = _Dimensions$get.height;\n\n  var _useForm = useForm({\n    resolver: yupResolver(schema)\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var onConfirm = useCallback(function () {\n    navigation.navigate(SignUpNavKey.VerifyScreen, {\n      phoneNumber: phoneNumber\n    });\n  }, []);\n  return React.createElement(AltContainer, {\n    backdropHeight: height / 5.2,\n    navigation: navigation,\n    title: \"Sign up\",\n    headerMode: \"with-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, React.createElement(Box, {\n    bg: \"white\",\n    position: \"relative\",\n    shadow: 2,\n    rounded: \"xl\",\n    padding: 5,\n    paddingBottom: 10,\n    marginX: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(VStack, {\n    space: 5,\n    marginBottom: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }, React.createElement(ControllerFormInput, {\n    name: \"phonenumber\",\n    control: control,\n    label: \"Enter phone number\",\n    keyboardType: \"phone-pad\",\n    type: \"text\",\n    InputRightElement: React.createElement(Pressable, {\n      onPress: function onPress() {\n        return console.log(\"Pressed\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      size: 24,\n      color: colors.primary,\n      style: {\n        paddingEnd: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 10\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  })), React.createElement(Box, {\n    position: \"absolute\",\n    bottom: -20,\n    left: 0,\n    right: 0,\n    width: \"100%\",\n    paddingX: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 6\n    }\n  }, React.createElement(PrimaryButton, {\n    text: \"Confirm\",\n    shadow: 5,\n    press: onConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  })))), React.createElement(Stack, {\n    alignItems: \"center\",\n    marginBottom: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }\n  }, React.createElement(HStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 6\n    }\n  }, \" Already have an account? \"), React.createElement(Pressable, {\n    focusable: true,\n    cursor: \"pointer\",\n    onPress: function onPress() {\n      navigation.navigate(PlainNavKey.LoginScreen);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    bold: true,\n    color: colors.primary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, \"Sign in!\")))));\n}\n;","map":{"version":3,"sources":["/Users/mac/Desktop/inspiredideas/afya-bora/src/views/SignUp/SignUpScreen.tsx"],"names":["React","useState","useNavigation","Box","HStack","VStack","View","Pressable","Stack","Text","PrimaryButton","colors","NavKey","SignUpNavKey","PlainNavKey","AltContainer","ControllerFormInput","yup","useForm","yupResolver","MaterialCommunityIcons","useCallback","schema","object","shape","password","string","required","SignUp","navigation","phoneNumber","setPhoneNumber","Dimensions","get","height","resolver","control","handleSubmit","errors","formState","onConfirm","navigate","VerifyScreen","console","log","primary","paddingEnd","LoginScreen"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Box, HStack, VStack, View, Pressable, Stack, Text } from \"native-base\";\nimport { PrimaryButton } from \"../../components/button\";\nimport { colors } from \"../../contants/colors\";\n\n\nimport { NavKey as SignUpNavKey } from '.'\nimport { NavKey as PlainNavKey} from '../_Plain'\nimport AltContainer from \"../../components/containers/AltContainer\";\nimport { Dimensions } from \"react-native\";\nimport { ControllerFormInput } from \"../../components/forms/inputs\";\n\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useCallback } from \"react\";\n\ninterface SignUpFormInput {\n\temail: string;\n\tpassword: string;\n}\n\nconst schema = yup.object().shape({\n\tpassword: yup.string().required(),\n});\n\nexport default function SignUp  ()  {\n\tconst navigation = useNavigation();\n\tconst [phoneNumber, setPhoneNumber] = useState('')\n\tconst { height } = Dimensions.get(\"screen\");\n\n\t// if (!confirm) {\n\t// \treturn (\n\t// \t);\n\t// }\n\tconst {\n\t\tcontrol,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm<SignUpFormInput>({\n\t\tresolver: yupResolver(schema),\n\t});\n\n\tconst onConfirm = useCallback(() => {\n\t\tnavigation.navigate(SignUpNavKey.VerifyScreen, { phoneNumber })\n\t}, [])\n\n\n\treturn (\n\t\t<AltContainer backdropHeight={height / 5.2} navigation={navigation} title=\"Sign up\" headerMode=\"with-back\">\n\t\t\t<View flexGrow={1} >\n\t\t\t\t<Box bg=\"white\" position=\"relative\" shadow={2} rounded=\"xl\" padding={5} paddingBottom={10} marginX={5}>\n\t\t\t\t\t<VStack space={5} marginBottom={15}>\t\t\t\t\t\t\n\t\t\t\t\t\t<ControllerFormInput\n\t\t\t\t\t\t\tname=\"phonenumber\"\n\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\tlabel=\"Enter phone number\"\n\t\t\t\t\t\t\tkeyboardType=\"phone-pad\"\n\t\t\t\t\t\t\ttype={\"text\"\n\t\t\t\t\t\t\t\t// visibility === \"eye-outline\"\n\t\t\t\t\t\t\t\t// \t? \"text\"\n\t\t\t\t\t\t\t\t// \t: \"password\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tInputRightElement={\n\t\t\t\t\t\t\t\t<Pressable\n\t\t\t\t\t\t\t\t\tonPress={() => console.log(\"Pressed\")\n\t\t\t\t\t\t\t\t\t\t// visibility ===\n\t\t\t\t\t\t\t\t\t\t// \t\"eye-outline\"\n\t\t\t\t\t\t\t\t\t\t// \t? setVisibility(\n\t\t\t\t\t\t\t\t\t\t// \t\t\"eye-off-outline\"\n\t\t\t\t\t\t\t\t\t\t// \t)\n\t\t\t\t\t\t\t\t\t\t// \t: setVisibility(\n\t\t\t\t\t\t\t\t\t\t// \t\t\"eye-outline\"\n\t\t\t\t\t\t\t\t\t\t// \t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MaterialCommunityIcons\n\t\t\t\t\t\t\t\t\t\t// name={visibility}\n\t\t\t\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\t\t\t\tcolor={\n\t\t\t\t\t\t\t\t\t\t\tcolors.primary\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tpaddingEnd: 10,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Pressable>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</VStack>\n\t\t\t\t\t<Box position=\"absolute\" bottom={-20} left={0} right={0} width=\"100%\" paddingX={10}>\n\t\t\t\t\t\t<PrimaryButton\n\t\t\t\t\t\t\ttext={\"Confirm\"}\n\t\t\t\t\t\t\tshadow={5}\n\t\t\t\t\t\t\tpress={onConfirm}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</View>\n\n\t\t\t<Stack alignItems=\"center\" marginBottom={5}>\n\t\t\t\t<HStack>\n\t\t\t\t\t<Text> Already have an account? </Text>\n\t\t\t\t\t<Pressable\n\t\t\t\t\t\tfocusable\n\t\t\t\t\t\tcursor=\"pointer\"\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tnavigation.navigate(PlainNavKey.LoginScreen);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text bold color={colors.primary}>\n\t\t\t\t\t\t\tSign in!\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Pressable>\n\t\t\t\t</HStack>\n\t\t\t</Stack>\n\t\t</AltContainer>\n\t)\n};\n"]},"metadata":{},"sourceType":"module"}