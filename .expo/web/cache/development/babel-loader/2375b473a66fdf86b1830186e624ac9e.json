{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/inspiredideas/afya-bora/src/views/Home/BookAppointment/PatientComplaint.tsx\";\nimport React, { useState } from \"react\";\nimport { ArrowBackIcon, Box, Button, HStack, Stack, Text, TextArea, View, VStack } from \"native-base\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { colors } from \"../../../contants/colors\";\nimport _ from \"lodash\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { toggleStringFromList } from \"../../../utils\";\nimport { HomeNavKey as MainNavKey } from \"../\";\nimport MainContainer from \"../../../components/containers/MainContainer\";\nimport { IconContainer } from \"../../../components/misc\";\nimport { useAppointmentTempoStore } from \"../../../internals/appointment/context\";\nimport { useMutation } from 'react-query';\nvar keySymptoms = [\"Fever\", \"Vomitting\", \"Chest Pain\", \"Cough\", \"Ear Pain\", \"Skin Rash\"];\nexport function PatientComplaint(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var setAppointment = useAppointmentTempoStore(function (state) {\n    return state.setAppointment;\n  });\n\n  var _useMutation = useMutation(setAppointment, {\n    onMutate: function onMutate(variables) {},\n    onError: function onError(error, variables, context) {\n      console.log(\"Something went wrong\");\n    },\n    onSuccess: function onSuccess(data, variables, context) {\n      console.log(\"Data already saved \");\n      navigation.navigate(MainNavKey.HomeScreen);\n    }\n  }),\n      addAppointment = _useMutation.mutate,\n      isLoading = _useMutation.isLoading;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      symptoms = _useState2[0],\n      setSymptoms = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      complaint = _useState4[0],\n      setComplaint = _useState4[1];\n\n  var toggleKeySymptom = function toggleKeySymptom(symptom) {\n    var sy = toggleStringFromList(symptom, symptoms);\n    setSymptoms(sy);\n  };\n\n  var _route$params = route.params,\n      consultant = _route$params.consultant,\n      appointment = _route$params.appointment;\n\n  var onSubmit = function onSubmit() {\n    addAppointment({\n      symptoms: symptoms,\n      consultant: consultant,\n      complaint: complaint,\n      dateTime: appointment\n    });\n  };\n\n  return React.createElement(MainContainer, {\n    title: \"About your Visit\",\n    leftSection: navigation.canGoBack() ? function () {\n      return React.createElement(Pressable, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      }, React.createElement(IconContainer, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 8\n        }\n      }, React.createElement(ArrowBackIcon, {\n        size: 6,\n        color: \"#561BB3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      })));\n    } : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 3\n    }\n  }, React.createElement(VStack, {\n    alignItems: \"center\",\n    paddingX: 10,\n    space: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 4\n    }\n  }, React.createElement(Box, {\n    bg: \"white\",\n    shadow: 2,\n    rounded: 10,\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack, {\n    style: {\n      paddingHorizontal: 20,\n      paddingTop: 20,\n      paddingBottom: 40\n    },\n    space: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 6\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    fontSize: \"3xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 8\n    }\n  }, \"Symptoms\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 8\n    }\n  }, \"Check any symptoms you have.\")), React.createElement(Stack, {\n    space: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, _.chunk(keySymptoms, 2).map(function (_ref2, index) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        symptomA = _ref3[0],\n        symptomB = _ref3[1];\n\n    return React.createElement(HStack, {\n      space: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 10\n      }\n    }, React.createElement(Box, {\n      rounded: \"xl\",\n      borderColor: \"#ccc\",\n      bg: symptoms.includes(symptomA) ? \"#258FBE\" : \"#fff\",\n      borderWidth: 1,\n      flex: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        padding: 10,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      onPress: function onPress() {\n        return toggleKeySymptom(symptomA);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 12\n      }\n    }, React.createElement(Text, {\n      color: symptoms.includes(symptomA) ? \"#fff\" : \"#000\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, symptomA))), React.createElement(Box, {\n      rounded: \"xl\",\n      borderColor: \"#ccc\",\n      bg: symptoms.includes(symptomB) ? \"#258FBE\" : \"#fff\",\n      borderWidth: 1,\n      flex: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        padding: 10,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      onPress: function onPress() {\n        return toggleKeySymptom(symptomB);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 12\n      }\n    }, React.createElement(Text, {\n      color: symptoms.includes(symptomB) ? \"#fff\" : \"#000\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, symptomB))));\n  })))), React.createElement(Box, {\n    bg: \"white\",\n    shadow: 2,\n    rounded: 10,\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }\n  }, React.createElement(VStack, {\n    style: {\n      paddingHorizontal: 20,\n      paddingTop: 20,\n      paddingBottom: 40\n    },\n    space: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    fontSize: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, \"What is your primary reason for seeing the doctor?\"), React.createElement(TextArea, {\n    value: complaint,\n    autoCorrect: false,\n    borderColor: \"#FFF\",\n    placeholder: \"Describe how you are feeling ...\",\n    onChangeText: function onChangeText(complaint) {\n      setComplaint(complaint);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }))), React.createElement(Button, {\n    width: \"100%\",\n    bg: colors.primary,\n    onPress: onSubmit,\n    isLoading: isLoading,\n    disabled: isLoading,\n    rounded: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 5\n    }\n  }, \"Book Appointment\")));\n}","map":{"version":3,"sources":["/Users/mac/Desktop/inspiredideas/afya-bora/src/views/Home/BookAppointment/PatientComplaint.tsx"],"names":["React","useState","ArrowBackIcon","Box","Button","HStack","Stack","Text","TextArea","View","VStack","useNavigation","colors","_","toggleStringFromList","HomeNavKey","MainNavKey","MainContainer","IconContainer","useAppointmentTempoStore","useMutation","keySymptoms","PatientComplaint","route","navigation","setAppointment","state","onMutate","variables","onError","error","context","console","log","onSuccess","data","navigate","HomeScreen","addAppointment","mutate","isLoading","symptoms","setSymptoms","complaint","setComplaint","toggleKeySymptom","symptom","sy","params","consultant","appointment","onSubmit","dateTime","canGoBack","goBack","undefined","paddingHorizontal","paddingTop","paddingBottom","chunk","map","index","symptomA","symptomB","includes","padding","alignItems","justifyContent","primary"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n\tArrowBackIcon,\n\tBox,\n\tButton,\n\tHeading,\n\tHStack,\n\tInput,\n\tScrollView,\n\tStack,\n\tText,\n\tTextArea,\n\tView,\n\tVStack,\n} from \"native-base\";\nimport { HeaderwithBack } from \"../../../components/header\";\nimport {\n\tCommonActions,\n\tRouteProp,\n\tStackActions,\n\tuseNavigation,\n} from \"@react-navigation/native\";\n// import { Symptom } from \"../../../components/bars\";\nimport { Spacer } from \"../../../components/Spacer\";\nimport { colors } from \"../../../contants/colors\";\nimport _ from \"lodash\";\nimport { TouchableOpacity, Alert, ToastAndroid, Pressable } from \"react-native\";\nimport { toggleStringFromList } from \"../../../utils\";\n\nimport { HomeNavKey as MainNavKey } from \"../\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\nimport { BookAppointmentStackParamList } from \".\";\nimport MainContainer from \"../../../components/containers/MainContainer\";\nimport { IconContainer } from \"../../../components/misc\";\nimport { useAppointmentTempoStore } from \"../../../internals/appointment/context\";\n\nimport { useMutation } from 'react-query'\nimport { TabNavKey } from \"../../_Authenticated\";\n\ntype PatientComplaintScreenRouteProp = RouteProp<\n\tBookAppointmentStackParamList,\n\t\"PatientComplaint\"\n>;\ntype PatientComplaintNavigationProp = StackNavigationProp<\n\tBookAppointmentStackParamList,\n\t\"PatientComplaint\"\n>;\n\ntype PatientComplaintProps = {\n\troute: PatientComplaintScreenRouteProp;\n\tnavigation: PatientComplaintNavigationProp;\n};\n\nconst keySymptoms = [\n\t\"Fever\",\n\t\"Vomitting\",\n\t\"Chest Pain\",\n\t\"Cough\",\n\t\"Ear Pain\",\n\t\"Skin Rash\",\n];\n\nexport function PatientComplaint({ route }: PatientComplaintProps) {\n\tconst navigation = useNavigation();\n\tconst setAppointment = useAppointmentTempoStore(state => state.setAppointment)\n\n\tconst { mutate: addAppointment, isLoading } = useMutation(setAppointment, {\n\t\tonMutate: variables => {\n\t\t},\n\t\tonError: (error, variables, context) => {\n\t\t\tconsole.log(\"Something went wrong\")\n\t\t},\n\t\tonSuccess: (data, variables, context) => {\n\t\t\tconsole.log(\"Data already saved \")\n\t\t\tnavigation.navigate(MainNavKey.HomeScreen);\n\t\t\t// Boom baby!\n\t\t},\n\n\t})\n\n\tconst [symptoms, setSymptoms] = useState<Array<string>>([]);\n\tconst [complaint, setComplaint] = useState(\"\");\n\n\tconst toggleKeySymptom = (symptom: string) => {\n\t\tconst sy = toggleStringFromList(symptom, symptoms);\n\t\tsetSymptoms(sy);\n\t};\n\n\tconst { consultant, appointment } = route.params;\n\n\tconst onSubmit = () => {\n\t\t// adding this here to fake the flow on the patient appointments\n\t\taddAppointment({\n\t\t\tsymptoms,\n\t\t\tconsultant,\n\t\t\tcomplaint,\n\t\t\tdateTime: appointment,\n\t\t})\n\n\t\t// FIXME (ghmecc): This is platform-centric code, right? to mean\n\t\t//  that this code won't render on the web sio? any way to help with that?\n\t\t// ----------------------------------------\n\t\t// Alert.alert(\n\t\t// \t\"Submit Request\",\n\t\t// \t\"Please confirm that you have entered correct information.\",\n\t\t// \t[\n\t\t// \t\t{ text: \"Cancel\", onPress: () => { } },\n\t\t// \t\t{\n\t\t// \t\t\ttext: \"Confirm\",\n\t\t// \t\t\tonPress: () => {\n\t\t// \t\t\t\t// TODO: arguments to the add appointment function\n\t\t// \t\t\t\taddAppointment({\n\t\t// \t\t\t\t\tsymptoms,\n\t\t// \t\t\t\t\tconsultant,\n\t\t// \t\t\t\t\tcomplaint,\n\t\t// \t\t\t\t\tdateTime: appointment,\n\t\t// \t\t\t\t})\n\t\t// \t\t\t},\n\t\t// \t\t},\n\t\t// \t]\n\t\t// );\n\t};\n\n\treturn (\n\t\t<MainContainer\n\t\t\ttitle=\"About your Visit\"\n\t\t\tleftSection={\n\t\t\t\t// Go back if can go back\n\t\t\t\tnavigation.canGoBack() ? (\n\t\t\t\t\t() => (\n\t\t\t\t\t\t<Pressable onPress={() => navigation.goBack()}>\n\t\t\t\t\t\t\t<IconContainer>\n\t\t\t\t\t\t\t\t<ArrowBackIcon size={6} color=\"#561BB3\" />\n\t\t\t\t\t\t\t</IconContainer>\n\t\t\t\t\t\t</Pressable>\n\t\t\t\t\t)\n\t\t\t\t) : undefined\n\t\t\t}\n\t\t>\n\n\t\t\t<VStack alignItems=\"center\" paddingX={10} space={10}>\n\t\t\t\t{/* Symptomps section */}\n\t\t\t\t<Box bg=\"white\" shadow={2} rounded={10} width=\"100%\">\n\t\t\t\t\t<Stack\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpaddingHorizontal: 20,\n\t\t\t\t\t\t\tpaddingTop: 20,\n\t\t\t\t\t\t\tpaddingBottom: 40,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tspace={10}\n\t\t\t\t\t>\n\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t<Text fontSize={\"3xl\"}>Symptoms</Text>\n\n\t\t\t\t\t\t\t<Text>Check any symptoms you have.</Text>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t<Stack space={2}>\n\t\t\t\t\t\t\t{_.chunk(keySymptoms, 2).map(\n\t\t\t\t\t\t\t\t([symptomA, symptomB], index) => (\n\t\t\t\t\t\t\t\t\t<HStack space={3}>\n\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\trounded=\"xl\"\n\t\t\t\t\t\t\t\t\t\t\tborderColor=\"#ccc\"\n\t\t\t\t\t\t\t\t\t\t\tbg={\n\t\t\t\t\t\t\t\t\t\t\t\tsymptoms.includes(symptomA)\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"#258FBE\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"#fff\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tborderWidth={1}\n\t\t\t\t\t\t\t\t\t\t\tflex={1}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 10,\n\t\t\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\ttoggleKeySymptom(symptomA)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsymptoms.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsymptomA\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"#fff\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"#000\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{symptomA}\n\t\t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\trounded=\"xl\"\n\t\t\t\t\t\t\t\t\t\t\tborderColor=\"#ccc\"\n\t\t\t\t\t\t\t\t\t\t\tbg={\n\t\t\t\t\t\t\t\t\t\t\t\tsymptoms.includes(symptomB)\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"#258FBE\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"#fff\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tborderWidth={1}\n\t\t\t\t\t\t\t\t\t\t\tflex={1}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 10,\n\t\t\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\ttoggleKeySymptom(symptomB)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsymptoms.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsymptomB\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"#fff\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"#000\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{symptomB}\n\t\t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Box>\n\n\t\t\t\t<Box bg=\"white\" shadow={2} rounded={10} width=\"100%\">\n\t\t\t\t\t<VStack\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpaddingHorizontal: 20,\n\t\t\t\t\t\t\tpaddingTop: 20,\n\t\t\t\t\t\t\tpaddingBottom: 40,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tspace={3}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text fontSize={\"xl\"}>\n\t\t\t\t\t\t\tWhat is your primary reason for seeing the doctor?\n\t\t\t\t\t\t</Text>\n\n\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\tvalue={complaint}\n\t\t\t\t\t\t\tautoCorrect={false}\n\t\t\t\t\t\t\tborderColor=\"#FFF\"\n\t\t\t\t\t\t\tplaceholder=\"Describe how you are feeling ...\"\n\t\t\t\t\t\t\tonChangeText={(complaint) => {\n\t\t\t\t\t\t\t\tsetComplaint(complaint);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</VStack>\n\t\t\t\t</Box>\n\t\t\t\t<Button width=\"100%\" bg={colors.primary} onPress={onSubmit}  isLoading={isLoading} disabled={isLoading} rounded={20}>\n\t\t\t\t\tBook Appointment\n\t\t\t\t</Button>\n\t\t\t</VStack>\n\t\t</MainContainer>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}